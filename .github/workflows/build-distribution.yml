name: Build distribution image

on:
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4
        with:
          fetch-depth: 0

      - name: Get the commit message
        id: commit-message
        run: echo "::set-output name=message::$(git log -1 --pretty=format:'%s')"

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: distribution_deploy
          aws-region: ${{ secrets.AWS_REGION }}
          web-identity-token-file: ${{ steps.id-token.outputs.token }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.FRONTEND_REPOSITORY }}

        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  notify-slack:
    runs-on: ubuntu-latest
    needs: build
    if: always() # Ensures this runs regardless of build success/failure
    steps:
      - name: Set Slack Message and Color
        run: |
          if [[ "${{ needs.build.result }}" == "success" ]]; then
            echo "SLACK_MESSAGE=✅ Build and deployment completed successfully on branch ${GITHUB_REF}. Last commit: ${{ steps.commit-message.outputs.message }}" >> $GITHUB_ENV
            echo "SLACK_COLOR=good" >> $GITHUB_ENV
          else
            echo "SLACK_MESSAGE=❌ Build and deployment failed on branch ${GITHUB_REF}. Last commit: ${{ steps.commit-message.outputs.message }}" >> $GITHUB_ENV
            echo "SLACK_COLOR=danger" >> $GITHUB_ENV
          fi

      - name: Notify Slack
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
          SLACK_TITLE: Deployment status of ${{ github.repository }}
          SLACK_MESSAGE: ${{ env.SLACK_MESSAGE }}
          SLACK_COLOR: ${{ env.SLACK_COLOR }}
